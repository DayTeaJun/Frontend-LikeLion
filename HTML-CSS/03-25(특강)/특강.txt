1. 시맨틱 태그
article
페이스북의 | 알수도있는사람, 광고 | 웹서비스에서 어디서든 독립적으로 사용하고 재사용 가능한 것
위젯 같은 요소 (다크모드로 보기 등)
페이지에서 쭉 Section이 있는데 느닷없이 나오는 광고 같은것

aside
부가적인 컨텐츠나, 아예 상관없는 광고를 할 때 씀

Section
연관성 있는 문서의 구획을 나누고자 할때 씀

section vs article

figure(이미지,글 묶음), figurecaption(글)
이미지에 대한 부가적인 설명을 적을 때

cite
작성자의 출처를 밝힐 때

dl(dt,dd 묶음) dt(용어이름,정의) dd(용어설명)

small 상호명

* article 요소는 독립적 콘텐츠(다른 서비스에 가져다 놔도 이상하지 않음)
* section 요소는 사이트 내 연관 콘텐츠(다른 서비스에 가져다 놓으면 이상함)
* article과 section 요소는 heading 요소와 함께 사용하는 것을 권장(디자인상 필요 없을 경우 높이 없이 택스트를 숨겨두기도 함)

!! 그냥 만들다보면 차이를 구별하는데 익숙해짐 !!


2. 마진병합 현상
부모가 자신의 마진값만큼 부모자체가 마진을 갖는 경우
overflow:hidden, -> 단점 자식이 그림자효과등 줄경우 부모요소를 넘어가면 안보이게됨
border, -> 선 보이는 것 자체가 안좋음
inline-block도 됨 -> 단점 자식의 컨텐츠 요소만큼 자신의 넓이가 정해지기 때문에 안됨
display: flow-root 가 제일 좋음 -> 대신 지원하는 환경이 되는지 봐야한다 ios 13미만은 안됨
*위 4가지 방법 전부 Block Formatting Context을 생성하게 됨
* flow-root만이 부작용없이 BFC를 생성하게 됨.

* Block Formatting Context

웹페이지 화면에 CSS를 랜더링하는 과정의 한 부분으로,

block 레벨 요소들이나 float 된 요소들이 서로 상호작용 하여 화면에 보여지게 되는 방법(block formatting)을 결정하는 구역(context)을 말합니다.

다음과 같은 경우 BFC가 생성됩니다.

- <html> 요소를 사용했을 때
- float: left, right
- overflow : visible 을 제외한 속성값(auto, hidden, scroll)을 사용했을 경우
- display: table-cell, inline-block, flow-root
- position:absolute, fixed 등등

BFC가 생성되면 다음과 같은 작용을 합니다.

1. 내부, 외부 float을 해제합니다.
2. 마진 컬랩싱 (margin collapsing) 현상을 막습니다.

결론 : 부모와 자식 사이의 간격을 사용할때는 마진을써서 마진병합을 만들기 보다는,
패딩을 써서 간격을 사용한다. (부모와 자식은 패딩, 요소와 요소는 마진)

3. 인라인요소끼리는 html에 줄바꿈을하면 서로간에 띄어져있음
인라인요소와 블록요소끼리 띄어져있으면 베이스라인의 문제일 수 있다.
이때는 vertical-align: top을하여 베이스라인 간격을 없앤다.

4. position
1) relative : 자기 자신의 위치를 이동시킴(자기 자신에 상대적)
2) absolute : 부모에 포지션 속성이 없으면 뷰포트 기준으로 위치함. (display 속성은 block으로 됨)
, 그냥 자체적으로 띄우고 싶을 때 사용

5. transform
: transform: translate(10px, 10px)을 span 요소에게 줬을 때 움직이지 않음, 근데 absolute로 쓰면 되긴함
이유는 absolute를 주면 블록이 되기때문, span은 인라인이기 때문에 display: block만 줘도 된다.
: transform할 때, 리페인트 리플로우는 되지않는다. 대신 GPU를 이용하여 브라우저 렌더링 속도를 빠르게 한다.


* 장치적으로 body에 깔린 백그라운드 이미지와 컬러는 그 너머로 보내버림 그래서 html에 색을 주고 하셈