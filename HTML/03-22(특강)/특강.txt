코드에 들어간 설명은 코드 내에 주석을 달겠음

1. ul에 클래스를 주면 재사용 가능

2. ul li에 언라인을 맡게해야함

3. 픽셀 퍼펙션은 기본이고, 눈에 안보이는 영역이 문제임 (반응형 웹으로 줄이거나, 컨텐츠 양이 많아도 대처가 가능한지)

4. 폰트는 * 나 body에 넣는 것보다 :root에 넣는게 좋은가?
: 내가 하는 작업 스타일에 명분이 있어야함, 폰트 패밀리 자체는 상속 받는다. root에 주겠다.하면 root임
(:root 참고 : https://designer-ej.tistory.com/entry/CSS-root-%EA%B0%80%EC%83%81-%ED%81%B4%EB%9E%98%EC%8A%A4%EB%A1%9C-CSS-%EB%B3%80%EC%88%98-%EB%8B%A4%EB%A3%A8%EA%B8%B0)

5. 헤더에 클래스를 달아야함

6. section-header에 마진탑을 안주시고 section에 패딩으로 주신 이유가 있을까요~?
: section이라는 부모레벨에서 기준을 포함하는데 있어 기본값임,
내부에 어떤 컨텐츠가 들어가든지 상관없이, 컨텐츠가 유지가 됨, (반응형의 상하단 공간의 변경 등)

7. 만들 때 뭐든 이유가 있는 규칙이 있어야함 (이것이 컨벤션)

8. align-items 디폴트 값은 normal이나 strech만큼 됨.

9. 레이아웃 짤때 대략적인 틀안에는 ... 으로 채우고 짜기 다짜면 그 때 ...에 마크업 짜기

10. 클래스 명에 타입명을 쓰는 건 좋지 않음

11. 이상적인 구조라면 h1태그가 하나지만, 섹션 여러개에서 제목을 써도 괜찮긴함

12. 작업순서
-> card 컴포넌트 마크업 작업 -> card css 틀만 잡고 끝 (한줄 한줄 어떤 의미인지 파악 후)

13. 이미지를 마크업에 넣나 css에 background로 넣나의 차이는
컨텐츠의 변화가 빈번한 정도에 따라의 차이다.