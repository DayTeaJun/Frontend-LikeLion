선배특강
스터디에 참여하기 (과하지않게)
토이 프로젝트하기
기술 블로그 (자신이 공부하면서 격은 시행 착오 등)
이력서 자주 쓰기
코딩테스트하기
잔디심기
그날 바로 코드리뷰하기
자바스크립트하고 딥다이브 책 보기
그냥 무조건 구현하기

github.com/july249

july249.tistory.com

Dave Grey

타입스크립트 + 리액트

리액트, 뷰

포트폴리오를 만들때 멋사에서 진행한 포폴은 다 비슷하니
나만의 것으로 리펙토링해서 바꿔보자

나만의 프로젝트는 한페이지 보다 멀티페이지로 만들기

이력서의 입사 후 포부에 대해서
내 역량(기술, 경험)을 근거로 회사의 어떤 부분에 기여할 수 있다
그래서 이력서, 포폴이 중요하다.
공식 문서 보기

기술을 자꾸 써보는 것

================================================

css특강 이종찬
css 짤때
1. 레이아웃 만들기
2. 마크업 추가하기
3. 재료 손질하기(기본 초기값 설정)

1. 일단 내가 만들려고 하는 전체적인 시각적 덩어리가 어떻게 구성되어있는지 알아본다
2. 구조 최소한의 레이아웃 마크업만 해둔다 (header, contents, footer)
3. 각 레이아웃의 가로값과 색, 마진 값 등을 설정한다. (여기서 height 값은 유동적으로 하기에 초기값 auto로, 적지않는다)
4. 설정한 레이아웃을 또 나눠서 설정한다. (또 height값은 설정하지 않는다)
5. User-agent stylesheet로 브라우저의 크기값이 다 다르기때문에 초기값으로 설정한다 (reset.css 등)
6. 정렬한다.
(모든 html 요소가 어떻게 공간을 차지하는지 확인하기 위해선 box-shadow를 써라)
7. 결국 타이포그래피까지 깔끔하게 하면 끝

Sector Specificity ( a , b , c)
cascading
셀렉터가 얼마나 구체적인지에 따라서 선택된다.

마진병합: 블록레벨 한정에 상하만 겹치고 의도된(이뻐보임) 시스템이다.
스스로 reset.css를 만들어가라, 웹 브라우저마다 어떻게 적용하는지 보면서
(프로퍼티를 공부하면 초기값을 공부)
CSS 초기값 initial value 이해하기
: 
CSS 상속 inheritance 이해하기
User-agent stylesheet 이해하기
캐스케이드 이해하기, CSS Specificity
CSS 박스모델 5가지 이해하기
CSS 셀렉터의 목적 제대로 이해하기
클래스 셀렉터의 올바른 쓰임새
CSS Challenges #1

html/css 를을 만들때
class명은 템플릿을 만든다 생각하고 무난하고 일반화적인 이름을 한다.
(일반화를 심하게하면 다른 클래스명과 겹칠 수 있다. 자신만의 원칙)
컨텐츠의 종속적인 클래스명을 사용하면 좋지 않다(fox그림인 class=fox)
만드는 순서
1. 먼저 레이아웃을 구상한다 
1) wrapper 을 만들어서 덩어리를 만든다.
: 레이아웃만 담당하는 역할 (가운데 정렬 및 가로값 지정 등)
2) height 는 초기값인 auto값을 잡는다.
3) box-shadow inset으로 공간을 어떻게 차지하는지 본다 (여백이 생기는지 안생기는지)
4) 여우와 h1 p 는 contents로서 정보를 담는 요소들이지만, 잔디는 중요한 컨텐츠라고 보기 어렵다.
-> 그래서 배경값으로 넣음
5) header라고 무조건 맨위가 아니다 (이미지등) h1태그하나에 헤더를 주기보다 그냥 h1을 놔둔다.
6) 마진병합을 없애기 위해 h1, p의 마진 값을 initial로 한다.
7) contents의 간격을 한꺼번에 일정하게 맞춘다. 
8) border-radius 한다.
9) 부모속성에서 padding을 줘서 간격을 맞춘다.
10) border-bottom(실제 보여주는 부분이라서 공간을 차지하는 border 속성을 준다) 줘서 shadow(공간을 차지하지 않음, 입체적으로 보이고싶을때 씀)와 비슷하게 만든다.
11) 글자 p에 마진으로 줄간격을 준다.
12) card-contents가 늘어나면 이미지가 끊긴다. repeat-x로 늘어나도 같이 늘어나게 하자.
13) 이미지가 정보를 포함하는 중요한 콘텐츠라면 시맨틱 속성인 figure을 쓸 수도 있다.

14) 이러한 카드를 완성하면 그리드같은 곳에 쓸 수 있다.
카드 -> 반찬 , 그리드 -> 식판