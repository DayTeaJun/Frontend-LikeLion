nodejs의 최상위 객체는 global이다. 브라우저에서의 window와 유사한 역할을 합니다.
NPM은 자바스크립트 패키지 매니저의 약자로, Node.js 런타임에서 사용되며, 개발자들이 자바스크립트 패키지를 쉽게 설치, 업데이트, 삭제할 수 있도록 도와주는 관리 프로그램입니다. 
특히 Webpack, PARCEL과 같은 번들러를 통해 우리의 프로젝트를 배포하기 좋은 상태로 만들 수 있습니다.
NPM은 다양한 패키지를 검색하고, 패키지를 설치하고, 버전 관리 등의 다양한 기능을 제공합니다. (여기서 패키지란 Node.js 환경에서 실행가능한 소프트웨어를 의미하며, React 역시 NPM을 통해 다운받아서 설치할 수 있는 라이브러리의 하나입니다.)

node를 쳐서 node 환경에 접속 가능. .exit으로 나가기 가능.
cd로 타겟폴더까지 이동한 다음에, (mkdir은 폴더생성, touch는 파일생성)
npx create-react-app my-app 로 my-app폴더를 깔고,
npm start를 하면 본격적으로 시작 준비가 됨.
ctrl+c 는 서버에서 나가는 것
다시 npm start로 시작하게 하든가

package.json은 매우 중요함 의존성 파일들을 관리함


npm run build 합쳐주고 난독화 해주고 압축해주고 서버안에 들어갈 것을 build폴더에 넣어줌. 그리고 레포짓 파고 add file-개별 파일들 업로드(폴더채로 넣는건 피하자)하고 배포를 해 볼 수 있다.

JSX는 HTML과 매우 유사하지만 엄연히 다른 언어이며, JavaScript 코드에서 마치 HTML을 사용해 UI컴포넌트를 만드는것 같은 편리한 개발 경험을 제공합니다. 이렇게 하면 JavaScript 코드와 HTML 태그를 함께 사용하여 UI를 렌더링할 수 있어서, UI 코드의 가독성과 유지보수성이 높아집니다

JSX는
     true에 대한 값은 속성 이름만으로 표기 가능 
     문자를 제외한 속성값은 중괄호({ })를 사용합니다.
      <input tyep="radio" checked></input> 
      <input tyep="radio" checked={false}></input> 

      <div style={{backgroundColor:"black", color:"white"}}></div>에서
      왜 background-color라고 작성할 수 없을까요? 
      jsx는 자바스크립트 규칙을 따르기 때문에 _,$ 제외하곤 변수명에 쓸 수 없기 때문에. 
      {}안에 변수를 쓸때..


 // 아이템마다 key라는 프로퍼티가 있어야함  (보통 프론트엔드 개발자는 데이터를 받아와서 뿌리고, 그 데이터안에 no이나 id값을 식별자라 하는데 이걸 key값으로 사용 많이함)
// key를 등록하게 되면 html(개발자 도구화면)에는 공개되지 않지만 등록됨
// react가 아이템 값에 key라는 걸 요구하는 이유는 최적화와 관련이 있다. 사용자의 인터랙션을 통해서(spa같은) 화면에 변화가 있을 때 컴포넌트를 렌더링해줘야하는데
// 싹 바꾸지 않고 비교함(미리 저장(현재 부분과 바뀔 부분)), 비교해서 바뀐 부분만 교체함, 그래서 빠른 성능으로 랜더링 처리함
// 그래서 리액트가 아이템을 교체할 때 '기존의 존재했던 key'와 '바뀌어야했던 key'를 비교해서 서로 업데이트를 함
// key를 프로퍼티를 컴포넌트를 생성할 때 계속 달아주면 랜더링을 줄이게 할 수 있음.
// 개발자가 key를 안넣어줘도 내부적으로 넣어주는 로직(key={index} 자동 생성)이 있지만, 에러(경고)가 뜸(문제 없이 실행되긴 함)
// key라는 마땅한 식별자가 없다면 key={index}를 임의로 넣어도 됨.
// 라이브러리로 난수로 만들어서 넣어도 되지만 별로임


